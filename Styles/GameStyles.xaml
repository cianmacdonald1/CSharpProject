<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Advanced WPF Styles for Modern Gaming UI -->
    
    <!-- Converters -->
    <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
    
    <!-- Custom Converters for Game-specific Bindings -->
    <!-- Note: These converters will be added to App.xaml resources -->
    
    <!-- Base Button Style -->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="20,10"/>
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- Background with gradient -->
                        <Border x:Name="BackgroundBorder"
                               CornerRadius="5"
                               BorderThickness="2">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#40404040" Offset="0"/>
                                    <GradientStop Color="#20202020" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#606060"/>
                            </Border.BorderBrush>
                        </Border>
                        
                        <!-- Content -->
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="{TemplateBinding Padding}"/>
                        
                        <!-- Hover glow effect -->
                        <Border x:Name="GlowBorder"
                               CornerRadius="5"
                               BorderThickness="2"
                               BorderBrush="Transparent"
                               Opacity="0"/>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="GlowBorder" Property="BorderBrush" Value="Cyan"/>
                            <Setter TargetName="GlowBorder" Property="Opacity" Value="0.8"/>
                            <Setter TargetName="BackgroundBorder" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#60606060" Offset="0"/>
                                        <GradientStop Color="#40404040" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#20202020" Offset="0"/>
                                        <GradientStop Color="#40404040" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Primary Menu Button (emphasized) -->
    <Style x:Key="PrimaryMenuButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="Button">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    <GradientStop Color="Yellow" Offset="0"/>
                    <GradientStop Color="Orange" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Standard Menu Button -->
    <Style x:Key="MenuButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="Button">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Cyan"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Game Button (for in-game UI) -->
    <Style x:Key="GameButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="Button">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="MinWidth" Value="150"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Yellow"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Health Bar Style -->
    <Style x:Key="HealthBarStyle" TargetType="ProgressBar">
        <Setter Property="Height" Value="20"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Background" Value="#40FF0000"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="2"/>
                        <Rectangle Name="PART_Track" Fill="Transparent"/>
                        <Rectangle Name="PART_Indicator"
                                 Fill="{TemplateBinding Foreground}"
                                 HorizontalAlignment="Left"/>
                        <TextBlock Text="HEALTH"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Foreground="White"
                                 FontSize="10"
                                 FontWeight="Bold"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Shield Bar Style -->
    <Style x:Key="ShieldBarStyle" TargetType="ProgressBar">
        <Setter Property="Height" Value="15"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Blue"/>
        <Setter Property="Background" Value="#400000FF"/>
        <Setter Property="Foreground" Value="Cyan"/>
    </Style>
    
    <!-- Animated Text Style -->
    <Style x:Key="AnimatedTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard RepeatBehavior="Forever" AutoReverse="True">
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                       From="0.5" To="1.0" Duration="0:0:1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- Particle Effect Styles -->
    <Style x:Key="ParticleStyle" TargetType="Ellipse">
        <Setter Property="Width" Value="4"/>
        <Setter Property="Height" Value="4"/>
        <Setter Property="Fill" Value="White"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                       From="1.0" To="0.0" Duration="0:0:2"/>
                        <DoubleAnimation Storyboard.TargetProperty="Width"
                                       From="4" To="0" Duration="0:0:2"/>
                        <DoubleAnimation Storyboard.TargetProperty="Height"
                                       From="4" To="0" Duration="0:0:2"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>